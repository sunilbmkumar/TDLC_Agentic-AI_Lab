"use strict";exports.id=96,exports.ids=[96],exports.modules={95096:(se,D,a)=>{a.d(D,{fromProcess:()=>te});var I=a(70857),u=a(16928);const E={},H=()=>process&&process.geteuid?`${process.geteuid()}`:"DEFAULT",m=()=>{const{HOME:e,USERPROFILE:t,HOMEPATH:s,HOMEDRIVE:r=`C:${u.sep}`}=process.env;if(e)return e;if(t)return t;if(s)return`${r}${s}`;const n=H();return E[n]||(E[n]=(0,I.homedir)()),E[n]},k="AWS_PROFILE",L="default",j=e=>e.profile||process.env[k]||L;var re=a(76982);const ne=e=>{const s=createHash("sha1").update(e).digest("hex");return join(getHomeDir(),".aws","sso","cache",`${s}.json`)};var O=a(79896);const{readFile:b}=O.promises,oe=async e=>{const t=getSSOTokenFilepath(e),s=await b(t,"utf8");return JSON.parse(s)};var _;(function(e){e.HEADER="header",e.QUERY="query"})(_||(_={}));var P;(function(e){e.HEADER="header",e.QUERY="query"})(P||(P={}));var v;(function(e){e.HTTP="http",e.HTTPS="https"})(v||(v={}));var p;(function(e){e.MD5="md5",e.CRC32="crc32",e.CRC32C="crc32c",e.SHA1="sha1",e.SHA256="sha256"})(p||(p={}));const ie=e=>{const t=[];return e.sha256!==void 0&&t.push({algorithmId:()=>p.SHA256,checksumConstructor:()=>e.sha256}),e.md5!=null&&t.push({algorithmId:()=>p.MD5,checksumConstructor:()=>e.md5}),{_checksumAlgorithms:t,addChecksumAlgorithm(s){this._checksumAlgorithms.push(s)},checksumAlgorithms(){return this._checksumAlgorithms}}},ce=e=>{const t={};return e.checksumAlgorithms().forEach(s=>{t[s.algorithmId()]=s.checksumConstructor()}),t},ae=e=>({...getChecksumConfiguration(e)}),le=e=>({...resolveChecksumRuntimeConfig(e)});var x;(function(e){e[e.HEADER=0]="HEADER",e[e.TRAILER=1]="TRAILER"})(x||(x={}));var f;(function(e){e.PROFILE="profile",e.SSO_SESSION="sso-session",e.SERVICES="services"})(f||(f={}));var R;(function(e){e.HTTP_0_9="http/0.9",e.HTTP_1_0="http/1.0",e.TDS_8_0="tds/8.0"})(R||(R={}));const $=e=>Object.entries(e).filter(([t])=>{const s=t.indexOf(g);return s===-1?!1:Object.values(f).includes(t.substring(0,s))}).reduce((t,[s,r])=>{const n=s.indexOf(g),o=s.substring(0,n)===f.PROFILE?s.substring(n+1):s;return t[o]=r,t},{...e.default&&{default:e.default}}),N="AWS_CONFIG_FILE",K=()=>process.env[N]||(0,u.join)(m(),".aws","config"),V="AWS_SHARED_CREDENTIALS_FILE",W=()=>process.env[V]||(0,u.join)(m(),".aws","credentials"),G=/^([\w-]+)\s(["'])?([\w-@\+\.%:/]+)\2$/,M=["__proto__","profile __proto__"],A=e=>{const t={};let s,r;for(const n of e.split(/\r?\n/)){const o=n.split(/(^|\s)[;#]/)[0].trim();if(o[0]==="["&&o[o.length-1]==="]"){s=void 0,r=void 0;const i=o.substring(1,o.length-1),l=G.exec(i);if(l){const[,h,,F]=l;Object.values(f).includes(h)&&(s=[h,F].join(g))}else s=i;if(M.includes(i))throw new Error(`Found invalid profile name "${i}"`)}else if(s){const i=o.indexOf("=");if(![0,-1].includes(i)){const[l,h]=[o.substring(0,i).trim(),o.substring(i+1).trim()];if(h==="")r=l;else{r&&n.trimStart()===n&&(r=void 0),t[s]=t[s]||{};const F=r?[r,l].join(g):l;t[s][F]=h}}}}return t},{readFile:U}=O.promises,C={},T=(e,t)=>((!C[e]||t?.ignoreCache)&&(C[e]=U(e,"utf8")),C[e]),w=()=>({}),g=".",J=async(e={})=>{const{filepath:t=W(),configFilepath:s=K()}=e,r=m(),n="~/";let o=t;t.startsWith(n)&&(o=(0,u.join)(r,t.slice(2)));let c=s;s.startsWith(n)&&(c=(0,u.join)(r,s.slice(2)));const i=await Promise.all([T(c,{ignoreCache:e.ignoreCache}).then(A).then($).catch(w),T(o,{ignoreCache:e.ignoreCache}).then(A).catch(w)]);return{configFile:i[0],credentialsFile:i[1]}},ue=e=>Object.entries(e).filter(([t])=>t.startsWith(IniSectionType.SSO_SESSION+CONFIG_PREFIX_SEPARATOR)).reduce((t,[s,r])=>({...t,[s.substring(s.indexOf(CONFIG_PREFIX_SEPARATOR)+1)]:r}),{}),X=()=>({}),fe=async(e={})=>slurpFile(e.configFilepath??getConfigFilepath()).then(parseIni).then(getSsoSessionData).catch(X),Q=(...e)=>{const t={};for(const s of e)for(const[r,n]of Object.entries(s))t[r]!==void 0?Object.assign(t[r],n):t[r]=n;return t},Y=async e=>{const t=await J(e);return Q(t.configFile,t.credentialsFile)};class S extends Error{constructor(t,s=!0){let r,n=!0;typeof s=="boolean"?(r=void 0,n=s):s!=null&&typeof s=="object"&&(r=s.logger,n=s.tryNextLink??!0),super(t),this.name="ProviderError",this.tryNextLink=n,Object.setPrototypeOf(this,S.prototype),r?.debug?.(`@smithy/property-provider ${n?"->":"(!)"} ${t}`)}static from(t,s=!0){return Object.assign(new this(t.message,s),t)}}class d extends S{constructor(t,s=!0){super(t,s),this.name="CredentialsProviderError",Object.setPrototypeOf(this,d.prototype)}}class y extends S{constructor(t,s=!0){super(t,s),this.name="TokenProviderError",Object.setPrototypeOf(this,y.prototype)}}const de=(...e)=>async()=>{if(e.length===0)throw new ProviderError("No providers in chain");let t;for(const s of e)try{return await s()}catch(r){if(t=r,r?.tryNextLink)continue;throw r}throw t};var B=a(35317),z=a(39023);function Z(e,t,s){return e.$source||(e.$source={}),e.$source[t]=s,e}const q=(e,t,s)=>{if(t.Version!==1)throw Error(`Profile ${e} credential_process did not return Version 1.`);if(t.AccessKeyId===void 0||t.SecretAccessKey===void 0)throw Error(`Profile ${e} credential_process returned invalid credentials.`);if(t.Expiration){const o=new Date;if(new Date(t.Expiration)<o)throw Error(`Profile ${e} credential_process returned expired credentials.`)}let r=t.AccountId;!r&&s?.[e]?.aws_account_id&&(r=s[e].aws_account_id);const n={accessKeyId:t.AccessKeyId,secretAccessKey:t.SecretAccessKey,...t.SessionToken&&{sessionToken:t.SessionToken},...t.Expiration&&{expiration:new Date(t.Expiration)},...t.CredentialScope&&{credentialScope:t.CredentialScope},...r&&{accountId:r}};return Z(n,"CREDENTIALS_PROCESS","w"),n},ee=async(e,t,s)=>{const r=t[e];if(t[e]){const n=r.credential_process;if(n!==void 0){const o=(0,z.promisify)(B.exec);try{const{stdout:c}=await o(n);let i;try{i=JSON.parse(c.trim())}catch{throw Error(`Profile ${e} credential_process returned invalid JSON.`)}return q(e,i,t)}catch(c){throw new d(c.message,{logger:s})}}else throw new d(`Profile ${e} did not contain credential_process.`,{logger:s})}else throw new d(`Profile ${e} could not be found in shared credentials file.`,{logger:s})},te=(e={})=>async({callerClientConfig:t}={})=>{e.logger?.debug("@aws-sdk/credential-provider-process - fromProcess");const s=await Y(e);return ee(j({profile:e.profile??t?.profile}),s,e.logger)}}};
