"use strict";exports.id=720,exports.ids=[720],exports.modules={30720:($,w,s)=>{s.d(w,{fromIni:()=>B});var y=s(39084),f=s(16506),g=s(15238);const O=(e,o,t)=>{const d={EcsContainer:async h=>{const{fromHttp:l}=await Promise.all([s.e(539),s.e(524)]).then(s.bind(s,25524)),{fromContainerMetadata:A}=await s.e(35).then(s.bind(s,45035));return t?.debug("@aws-sdk/credential-provider-ini - credential_source is EcsContainer"),async()=>(0,f.cy)(l(h??{}),A(h))().then(I)},Ec2InstanceMetadata:async h=>{t?.debug("@aws-sdk/credential-provider-ini - credential_source is Ec2InstanceMetadata");const{fromInstanceMetadata:l}=await s.e(35).then(s.bind(s,45035));return async()=>l(h)().then(I)},Environment:async h=>{t?.debug("@aws-sdk/credential-provider-ini - credential_source is Environment");const{fromEnv:l}=await s.e(70).then(s.bind(s,72070));return async()=>l(h)().then(I)}};if(e in d)return d[e];throw new f.C1(`Unsupported credential source in profile ${o}. Got ${e}, expected EcsContainer or Ec2InstanceMetadata or Environment.`,{logger:t})},I=e=>(0,g.g)(e,"CREDENTIALS_PROFILE_NAMED_PROVIDER","p"),T=(e,{profile:o="default",logger:t}={})=>Boolean(e)&&typeof e=="object"&&typeof e.role_arn=="string"&&["undefined","string"].indexOf(typeof e.role_session_name)>-1&&["undefined","string"].indexOf(typeof e.external_id)>-1&&["undefined","string"].indexOf(typeof e.mfa_serial)>-1&&(P(e,{profile:o,logger:t})||m(e,{profile:o,logger:t})),P=(e,{profile:o,logger:t})=>{const d=typeof e.source_profile=="string"&&typeof e.credential_source>"u";return d&&t?.debug?.(`    ${o} isAssumeRoleWithSourceProfile source_profile=${e.source_profile}`),d},m=(e,{profile:o,logger:t})=>{const d=typeof e.credential_source=="string"&&typeof e.source_profile>"u";return d&&t?.debug?.(`    ${o} isCredentialSourceProfile credential_source=${e.credential_source}`),d},u=async(e,o,t,d={})=>{t.logger?.debug("@aws-sdk/credential-provider-ini - resolveAssumeRoleCredentials (STS)");const h=o[e],{source_profile:l,region:A}=h;if(!t.roleAssumer){const{getDefaultRoleAssumer:L}=await Promise.all([s.e(824),s.e(161)]).then(s.bind(s,84161));t.roleAssumer=L({...t.clientConfig,credentialProviderLogger:t.logger,parentClientConfig:{...t?.parentClientConfig,region:A??t?.parentClientConfig?.region}},t.clientPlugins)}if(l&&l in d)throw new f.C1(`Detected a cycle attempting to resolve credentials for profile ${(0,y.Bz)(t)}. Profiles visited: `+Object.keys(d).join(", "),{logger:t.logger});t.logger?.debug(`@aws-sdk/credential-provider-ini - finding credential resolver using ${l?`source_profile=[${l}]`:`profile=[${e}]`}`);const j=l?W(l,o,t,{...d,[l]:!0},a(o[l]??{})):(await O(h.credential_source,e,t.logger)(t))();if(a(h))return j.then(L=>(0,g.g)(L,"CREDENTIALS_PROFILE_SOURCE_PROFILE","o"));{const L={RoleArn:h.role_arn,RoleSessionName:h.role_session_name||`aws-sdk-js-${Date.now()}`,ExternalId:h.external_id,DurationSeconds:parseInt(h.duration_seconds||"3600",10)},{mfa_serial:N}=h;if(N){if(!t.mfaCodeProvider)throw new f.C1(`Profile ${e} requires multi-factor authentication, but no MFA code callback was provided.`,{logger:t.logger,tryNextLink:!1});L.SerialNumber=N,L.TokenCode=await t.mfaCodeProvider(N)}const U=await j;return t.roleAssumer(U,L).then(K=>(0,g.g)(K,"CREDENTIALS_PROFILE_SOURCE_PROFILE","o"))}},a=e=>!e.role_arn&&!!e.credential_source,E=e=>Boolean(e)&&typeof e=="object"&&typeof e.credential_process=="string",D=async(e,o)=>s.e(251).then(s.bind(s,11251)).then(({fromProcess:t})=>t({...e,profile:o})().then(d=>(0,g.g)(d,"CREDENTIALS_PROFILE_PROCESS","v"))),n=async(e,o,t={})=>{const{fromSSO:d}=await s.e(833).then(s.bind(s,69833));return d({profile:e,logger:t.logger,parentClientConfig:t.parentClientConfig,clientConfig:t.clientConfig})().then(h=>o.sso_session?(0,g.g)(h,"CREDENTIALS_PROFILE_SSO","r"):(0,g.g)(h,"CREDENTIALS_PROFILE_SSO_LEGACY","t"))},S=e=>e&&(typeof e.sso_start_url=="string"||typeof e.sso_account_id=="string"||typeof e.sso_session=="string"||typeof e.sso_region=="string"||typeof e.sso_role_name=="string"),p=e=>Boolean(e)&&typeof e=="object"&&typeof e.aws_access_key_id=="string"&&typeof e.aws_secret_access_key=="string"&&["undefined","string"].indexOf(typeof e.aws_session_token)>-1&&["undefined","string"].indexOf(typeof e.aws_account_id)>-1,H=async(e,o)=>{o?.logger?.debug("@aws-sdk/credential-provider-ini - resolveStaticCredentials");const t={accessKeyId:e.aws_access_key_id,secretAccessKey:e.aws_secret_access_key,sessionToken:e.aws_session_token,...e.aws_credential_scope&&{credentialScope:e.aws_credential_scope},...e.aws_account_id&&{accountId:e.aws_account_id}};return(0,g.g)(t,"CREDENTIALS_PROFILE","n")},k=e=>Boolean(e)&&typeof e=="object"&&typeof e.web_identity_token_file=="string"&&typeof e.role_arn=="string"&&["undefined","string"].indexOf(typeof e.role_session_name)>-1,M=async(e,o)=>s.e(804).then(s.bind(s,38042)).then(({fromTokenFile:t})=>t({webIdentityTokenFile:e.web_identity_token_file,roleArn:e.role_arn,roleSessionName:e.role_session_name,roleAssumerWithWebIdentity:o.roleAssumerWithWebIdentity,logger:o.logger,parentClientConfig:o.parentClientConfig})().then(d=>(0,g.g)(d,"CREDENTIALS_PROFILE_STS_WEB_ID_TOKEN","q"))),W=async(e,o,t,d={},h=!1)=>{const l=o[e];if(Object.keys(d).length>0&&p(l))return H(l,t);if(h||T(l,{profile:e,logger:t.logger}))return u(e,o,t,d);if(p(l))return H(l,t);if(k(l))return M(l,t);if(E(l))return D(t,e);if(S(l))return await n(e,l,t);throw new f.C1(`Could not resolve credentials using profile: [${e}] in configuration/credentials file(s).`,{logger:t.logger})},B=(e={})=>async({callerClientConfig:o}={})=>{const t={...e,parentClientConfig:{...o,...e.parentClientConfig}};t.logger?.debug("@aws-sdk/credential-provider-ini - fromIni");const d=await(0,y.YU)(t);return W((0,y.Bz)({profile:e.profile??o?.profile}),d,t)}},15238:($,w,s)=>{s.d(w,{g:()=>y});function y(f,g,O){return f.$source||(f.$source={}),f.$source[g]=O,f}},16506:($,w,s)=>{s.d(w,{C1:()=>f,mZ:()=>y,Jh:()=>g,cy:()=>O,VR:()=>I,Bj:()=>T});class y extends Error{constructor(m,u=!0){let a,E=!0;typeof u=="boolean"?(a=void 0,E=u):u!=null&&typeof u=="object"&&(a=u.logger,E=u.tryNextLink??!0),super(m),this.name="ProviderError",this.tryNextLink=E,Object.setPrototypeOf(this,y.prototype),a?.debug?.(`@smithy/property-provider ${E?"->":"(!)"} ${m}`)}static from(m,u=!0){return Object.assign(new this(m.message,u),m)}}class f extends y{constructor(m,u=!0){super(m,u),this.name="CredentialsProviderError",Object.setPrototypeOf(this,f.prototype)}}class g extends y{constructor(m,u=!0){super(m,u),this.name="TokenProviderError",Object.setPrototypeOf(this,g.prototype)}}const O=(...P)=>async()=>{if(P.length===0)throw new y("No providers in chain");let m;for(const u of P)try{return await u()}catch(a){if(m=a,a?.tryNextLink)continue;throw a}throw m},I=P=>()=>Promise.resolve(P),T=(P,m,u)=>{let a,E,D,n=!1;const S=async()=>{E||(E=P());try{a=await E,D=!0,n=!1}finally{E=void 0}return a};return m===void 0?async p=>((!D||p?.forceRefresh)&&(a=await S()),a):async p=>((!D||p?.forceRefresh)&&(a=await S()),n?a:u&&!u(a)?(n=!0,a):(m(a)&&await S(),a))}},39084:($,w,s)=>{s.d(w,{QD:()=>A,Bz:()=>m,C9:()=>a,vf:()=>n,p6:()=>j,qw:()=>U,YU:()=>G});var y=s(70857),f=s(16928);const g={},O=()=>process&&process.geteuid?`${process.geteuid()}`:"DEFAULT",I=()=>{const{HOME:i,USERPROFILE:r,HOMEPATH:c,HOMEDRIVE:C=`C:${f.sep}`}=process.env;if(i)return i;if(r)return r;if(c)return`${C}${c}`;const v=O();return g[v]||(g[v]=(0,y.homedir)()),g[v]},T="AWS_PROFILE",P="default",m=i=>i.profile||process.env[T]||P;var u=s(76982);const a=i=>{const c=(0,u.createHash)("sha1").update(i).digest("hex");return(0,f.join)(I(),".aws","sso","cache",`${c}.json`)};var E=s(79896);const{readFile:D}=E.promises,n=async i=>{const r=a(i),c=await D(r,"utf8");return JSON.parse(c)};var S=s(72901);const p=i=>Object.entries(i).filter(([r])=>{const c=r.indexOf(A);return c===-1?!1:Object.values(S.Ip).includes(r.substring(0,c))}).reduce((r,[c,C])=>{const v=c.indexOf(A),R=c.substring(0,v)===S.Ip.PROFILE?c.substring(v+1):c;return r[R]=C,r},{...i.default&&{default:i.default}}),H="AWS_CONFIG_FILE",k=()=>process.env[H]||(0,f.join)(I(),".aws","config"),M="AWS_SHARED_CREDENTIALS_FILE",W=()=>process.env[M]||(0,f.join)(I(),".aws","credentials"),B=/^([\w-]+)\s(["'])?([\w-@\+\.%:/]+)\2$/,e=["__proto__","profile __proto__"],o=i=>{const r={};let c,C;for(const v of i.split(/\r?\n/)){const R=v.split(/(^|\s)[;#]/)[0].trim();if(R[0]==="["&&R[R.length-1]==="]"){c=void 0,C=void 0;const F=R.substring(1,R.length-1),x=B.exec(F);if(x){const[,b,,Y]=x;Object.values(S.Ip).includes(b)&&(c=[b,Y].join(A))}else c=F;if(e.includes(F))throw new Error(`Found invalid profile name "${F}"`)}else if(c){const F=R.indexOf("=");if(![0,-1].includes(F)){const[x,b]=[R.substring(0,F).trim(),R.substring(F+1).trim()];if(b==="")C=x;else{C&&v.trimStart()===v&&(C=void 0),r[c]=r[c]||{};const Y=C?[C,x].join(A):x;r[c][Y]=b}}}}return r},{readFile:t}=E.promises,d={},h=(i,r)=>((!d[i]||r?.ignoreCache)&&(d[i]=t(i,"utf8")),d[i]),l=()=>({}),A=".",j=async(i={})=>{const{filepath:r=W(),configFilepath:c=k()}=i,C=I(),v="~/";let R=r;r.startsWith(v)&&(R=(0,f.join)(C,r.slice(2)));let V=c;c.startsWith(v)&&(V=(0,f.join)(C,c.slice(2)));const F=await Promise.all([h(V,{ignoreCache:i.ignoreCache}).then(o).then(p).catch(l),h(R,{ignoreCache:i.ignoreCache}).then(o).catch(l)]);return{configFile:F[0],credentialsFile:F[1]}},L=i=>Object.entries(i).filter(([r])=>r.startsWith(S.Ip.SSO_SESSION+A)).reduce((r,[c,C])=>({...r,[c.substring(c.indexOf(A)+1)]:C}),{}),N=()=>({}),U=async(i={})=>h(i.configFilepath??k()).then(o).then(L).catch(N),K=(...i)=>{const r={};for(const c of i)for(const[C,v]of Object.entries(c))r[C]!==void 0?Object.assign(r[C],v):r[C]=v;return r},G=async i=>{const r=await j(i);return K(r.configFile,r.credentialsFile)}},72901:($,w,s)=>{s.d(w,{dB:()=>O,Ue:()=>g,Ip:()=>E,Vf:()=>a});var y;(function(n){n.HEADER="header",n.QUERY="query"})(y||(y={}));var f;(function(n){n.HEADER="header",n.QUERY="query"})(f||(f={}));var g;(function(n){n.HTTP="http",n.HTTPS="https"})(g||(g={}));var O;(function(n){n.MD5="md5",n.CRC32="crc32",n.CRC32C="crc32c",n.SHA1="sha1",n.SHA256="sha256"})(O||(O={}));const I=n=>{const S=[];return n.sha256!==void 0&&S.push({algorithmId:()=>O.SHA256,checksumConstructor:()=>n.sha256}),n.md5!=null&&S.push({algorithmId:()=>O.MD5,checksumConstructor:()=>n.md5}),{_checksumAlgorithms:S,addChecksumAlgorithm(p){this._checksumAlgorithms.push(p)},checksumAlgorithms(){return this._checksumAlgorithms}}},T=n=>{const S={};return n.checksumAlgorithms().forEach(p=>{S[p.algorithmId()]=p.checksumConstructor()}),S},P=n=>({...getChecksumConfiguration(n)}),m=n=>({...resolveChecksumRuntimeConfig(n)});var u;(function(n){n[n.HEADER=0]="HEADER",n[n.TRAILER=1]="TRAILER"})(u||(u={}));const a="__smithy_context";var E;(function(n){n.PROFILE="profile",n.SSO_SESSION="sso-session",n.SERVICES="services"})(E||(E={}));var D;(function(n){n.HTTP_0_9="http/0.9",n.HTTP_1_0="http/1.0",n.TDS_8_0="tds/8.0"})(D||(D={}))}};
